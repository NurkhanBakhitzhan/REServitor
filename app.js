const { Telegraf } = require("telegraf");
const express = require("express");

const bot = new Telegraf("7992499243:AAHpCRB8xoCtLJXMlvD19vaFIoJ9uhyK8s8");
const app = express();
app.use(express.json());

bot.command("start", async (ctx) => {
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", {
        reply_markup: {
            keyboard: [
                [{ text: "üéÆ –ò–≥—Ä–∞—Ç—å", web_app: { url: "https://reservitorgamebone-production.up.railway.app" } }]
            ],
            resize_keyboard: true
        }
    });
});const { Telegraf } = require("telegraf");

const bot = new Telegraf("7992499243:AAHpCRB8xoCtLJXMlvD19vaFIoJ9uhyK8s8");

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
bot.command("start", async (ctx) => {
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", {
        reply_markup: {
            keyboard: [
                [{ text: "üé≤ –ö–æ—Å—Ç–∏" }],
                [{ text: "üîô –ù–∞–∑–∞–¥" }]
            ],
            resize_keyboard: true
        }
    });
});

// –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –¥–ª—è –∏–≥—Ä—ã "–ö–æ—Å—Ç–∏"
bot.hears("üé≤ –ö–æ—Å—Ç–∏", async (ctx) => {
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:", {
        reply_markup: {
            keyboard: [
                [{ text: "üé≤ –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞" }],
                [{ text: "üë• –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä" }],
                [{ text: "üîô –ù–∞–∑–∞–¥" }]
            ],
            resize_keyboard: true
        }
    });
});

// –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏
bot.hears("üé≤ –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞", async (ctx) => {
    const dice = Math.floor(Math.random() * 6) + 1;
    await ctx.reply(`üé≤ –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${dice}`);
});

// –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.hears("üîô –ù–∞–∑–∞–¥", async (ctx) => {
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", {
        reply_markup: {
            keyboard: [
                [{ text: "üé≤ –ö–æ—Å—Ç–∏" }],
                [{ text: "üîô –ù–∞–∑–∞–¥" }]
            ],
            resize_keyboard: true
        }
    });
});

bot.launch();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");



// üé≤ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /roll (–∏–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏)
bot.command("roll", async (ctx) => {
    const { dice1, dice2, winner } = games.rollDice();
    await ctx.reply(`üé≤ –ò–≥—Ä–æ–∫ 1: ${dice1}\nüé≤ –ò–≥—Ä–æ–∫ 2: ${dice2}\nüèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${winner}`);
});

app.listen(3000, () => console.log("API –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));
bot.launch();
